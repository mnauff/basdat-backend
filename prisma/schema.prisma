generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id           String   @id @unique @default(uuid())
  accountId    String   @unique
  email        String?  @unique
  password     String?
  isVerified   Boolean?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  role         Role     @default(STUDENT)
  refreshToken String?
  student      Student?
}

model Student {
  name       String
  studentId  String   @id @unique
  accountId  String?  @unique
  finalGrade Decimal?
  groupId    String?
  group      Group[]
  account    Account? @relation(fields: [accountId], references: [accountId])

  @@index([groupId])
}

model Group {
  groupId     String    @id @unique @default(uuid())
  practicumId String    @unique
  student     Student[]
  practicum   Practicum @relation(fields: [practicumId], references: [practicumId])
}

model Practicum {
  practicumId   String   @id @unique @default(uuid())
  practicumname String
  place         String
  date          DateTime
  group         Group[]
  modules       Module[]
}

model Module {
  moduleId    String    @id @unique @default(uuid())
  name        String
  practicumId String
  practicum   Practicum @relation(fields: [practicumId], references: [practicumId])

  @@index([practicumId])
}

model GroupToStudent {
  A String
  B String

  @@unique([A, B], map: "_GroupToStudent_AB_unique")
  @@index([B], map: "_GroupToStudent_B_index")
  @@map("_GroupToStudent")
}

enum Role {
  ADMIN
  STUDENT
}
